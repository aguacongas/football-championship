@page "/{id}/{stage}"

@inherits CompetitionModel

@if (Competition != null)
{
    <h1>@Competition.LocalizedNames.GetLocalizedValue()</h1>
}
@if (MatchGroup == null)
{
    <p><em>@Resources["Loading..."]</em></p>
}
else
{
    foreach (var group in MatchGroup)
    {
        <h3>@group.Key.ToLongDateString()</h3>
        <hr />
        @foreach (var match in group)
        {
            <EditForm Model="@match.Bet" OnValidSubmit="@(async () => await SaveBet(match.Bet))">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="row">
                    <div class="col-4">
                        <div>@match.BeginAtLocal.ToShortTimeString()</div>
                        <div class="small"><em>@match.LocalizedNames.GetLocalizedValue()</em></div>
                        <div class="small">@match.Group.GetLocalizedValue()</div>
                        <div>
                            <span class="small">@match.Number</span>
                            @if (CanBet(match))
                            {
                                <button class="btn btn-primary" type="submit" disabled="@(!match.Bet.ValueChanged)">
                                    <i class="far fa-save"></i>
                                </button>
                                <span class="oi@(match.Bet.Saved ? " oi-check" : "")"></span>
                            }
                        </div>
                    </div>
                    <div class="col">
                        <div class="row">
                            <div class="col">
                                <div><b>@GetTeamName(match, true)</b></div>
                            </div>
                            <div class="col">
                                <div><b>@GetTeamName(match, false)</b></div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                @if (CanBet(match))
                                {
                                    <InputNumber Class="bet form-control" bind-Value="@match.Bet.HomeValue" ParsingErrorMessage="@GetErrorMessage(match, true)" />
                                }
                                else
                                {
                                    <em>@match.Scores.First(s => s.IsHome).Value</em>
                                    <div class="small">
                                        @match.Bet.HomeValue
                                    </div>
                                }
                            </div>
                            <div class="col">
                                @if (CanBet(match))
                                {
                                    <InputNumber Class="bet form-control" bind-Value="@match.Bet.AwayValue" ParsingErrorMessage="@GetErrorMessage(match, true)" />
                                }
                                else
                                {
                                    <em>@match.Scores.First(s => !s.IsHome).Value</em>
                                    <div class="small">
                                        @match.Bet.AwayValue
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </EditForm>
        }

    }
}
